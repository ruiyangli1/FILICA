[{"path":"https://ruiyangli1.github.io/FILICA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ruiyang Li. Maintainer.","code":""},{"path":"https://ruiyangli1.github.io/FILICA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Li R, Lee S (2023). FILICA: Full Information Linked Independent Component Analysis (FI-LICA). https://github.com/ruiyangli1/FILICA, https://ruiyangli1.github.io/FILICA, https://ruiyangli1.github.io/FILICA/.","code":"@Manual{,   title = {FILICA: Full Information Linked Independent Component Analysis (FI-LICA)},   author = {Ruiyang Li and Seonjoo Lee},   year = {2023},   note = {https://github.com/ruiyangli1/FILICA, https://ruiyangli1.github.io/FILICA, https://ruiyangli1.github.io/FILICA/}, }"},{"path":"https://ruiyangli1.github.io/FILICA/index.html","id":"filica","dir":"","previous_headings":"","what":"Full Information Linked Independent Component Analysis (FI-LICA)","title":"Full Information Linked Independent Component Analysis (FI-LICA)","text":"Full Information Linked Independent Component Analysis (FI-LICA)","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/bestIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to identify the best-matching component — bestIC","title":"Function to identify the best-matching component — bestIC","text":"function aims identify best-matching component reference component","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/bestIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to identify the best-matching component — bestIC","text":"","code":"bestIC(true, estimated)"},{"path":"https://ruiyangli1.github.io/FILICA/reference/bestIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to identify the best-matching component — bestIC","text":"true reference data estimated estimated data, best-matching components identified","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/bestIC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to identify the best-matching component — bestIC","text":"resulting dataset gives best-matching component reference component","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/bestIC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to identify the best-matching component — bestIC","text":"","code":"# generate data set.seed(1234) dat1 = mvtnorm::rmvnorm(n = 100, mean = rep(0, 2), sigma = matrix(c(1,0.8,0.8,1), nrow = 2, ncol = 2)) # sigma: covariance matrix dat2 = mvtnorm::rmvnorm(n = 100, mean = rep(0, 2), sigma = matrix(c(1,0.5,0.5,1), nrow = 2, ncol = 2)) dat3 = matrix(rnorm(300, 0, 1), nrow = 100, ncol = 3) true = cbind(dat1[,1],dat2[,1]); estimated = cbind(dat1[,2],dat2[,2],dat3) colnames(true) = paste0(\"comp\", 1:2); colnames(estimated) = paste0(\"comp\", 1:5) # find the best-matching component cor(true, estimated) #>            comp1     comp2      comp3        comp4      comp5 #> comp1  0.8214027 0.0266890  0.0633228 -0.001277715 0.02306397 #> comp2 -0.0544349 0.5411846 -0.1132938  0.108466171 0.06570640 bestIC(true, estimated) #> Error in bestIC(true, estimated): could not find function \"bestIC\""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to keep the complete cases — data_complete","title":"Function to keep the complete cases — data_complete","text":"function keeps complete cases input modality data","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to keep the complete cases — data_complete","text":"","code":"data_complete(data_list)"},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to keep the complete cases — data_complete","text":"data_list input modality data (list)","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_complete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to keep the complete cases — data_complete","text":"resulting dataset data containing complete cases (list)","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_complete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to keep the complete cases — data_complete","text":"","code":"# generate data dat = data_generate_MAR(nsubj = 100, seed = 1234, n_miss = 20) # missing data (stored in lists) dat_miss = NULL; dat_miss[[1]] = dat$Y1_miss; dat_miss[[2]] = dat$Y2_miss # keep complete cases (stored in lists) dat_complete = data_complete(dat_miss)"},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_generate_MAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Data generation function for MAR — data_generate_MAR","title":"Data generation function for MAR — data_generate_MAR","text":"function generates simulation data (2 modalities) setting MAR","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_generate_MAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data generation function for MAR — data_generate_MAR","text":"","code":"data_generate_MAR(   nsubj = 100,   nvoxel1 = 1000,   nvoxel2 = 3000,   true_ncomp = 2,   seed = 1234,   n_miss = 5,   es_C1H1 = 0.5,   es_C2H2 = 0.5 )"},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_generate_MAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data generation function for MAR — data_generate_MAR","text":"nsubj number subjects nvoxel1 number voxels modality 1 nvoxel2 number voxels modality 2 true_ncomp number true component seed seed n_miss number missing subjects es_C1H1 effect size C1 H1 es_C2H2 effect size C2 H2","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_generate_MAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data generation function for MAR — data_generate_MAR","text":"resulting dataset lists including -missing data (Y1, Y2), order subjects implemented missing (subj1_miss, subj2_miss), missing data (Y1_miss, Y2_miss), intermediate parameters data generation process.","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_generate_MAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data generation function for MAR — data_generate_MAR","text":"","code":"dat = data_generate_MAR(nsubj = 100, seed = 1234, n_miss = 5); names(dat) #>  [1] \"Y1\"         \"Y2\"         \"H\"          \"X1\"         \"X2\"         #>  [6] \"W1\"         \"W2\"         \"XW1\"        \"XW2\"        \"subj1\"      #> [11] \"subj2\"      \"subj1_miss\" \"subj2_miss\" \"subj\"       \"Y1_miss\"    #> [16] \"Y2_miss\"    \"seed\""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_generate_MCAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Data generation function for MCAR — data_generate_MCAR","title":"Data generation function for MCAR — data_generate_MCAR","text":"function generates simulation data (2 modalities) setting MCAR","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_generate_MCAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data generation function for MCAR — data_generate_MCAR","text":"","code":"data_generate_MCAR(   nsubj = 100,   nvoxel1 = 1000,   nvoxel2 = 3000,   true_ncomp = 2,   seed = 1234,   n_miss = 5 )"},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_generate_MCAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data generation function for MCAR — data_generate_MCAR","text":"nsubj number subjects nvoxel1 number voxels modality 1 nvoxel2 number voxels modality 2 true_ncomp number true component seed seed n_miss number missing subjects","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_generate_MCAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data generation function for MCAR — data_generate_MCAR","text":"resulting dataset lists including -missing data (Y1, Y2), order subjects implemented missing (subj1_miss, subj2_miss), missing data (Y1_miss, Y2_miss), intermediate parameters data generation process.","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_generate_MCAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data generation function for MCAR — data_generate_MCAR","text":"","code":"dat = data_generate_MCAR(nsubj = 100, seed = 1234, n_miss = 5); names(dat) #>  [1] \"Y1\"         \"Y2\"         \"H\"          \"X1\"         \"X2\"         #>  [6] \"W1\"         \"W2\"         \"XW1\"        \"XW2\"        \"subj1\"      #> [11] \"subj2\"      \"subj1_miss\" \"subj2_miss\" \"Y1_miss\"    \"Y2_miss\"    #> [16] \"seed\""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_standardization.html","id":null,"dir":"Reference","previous_headings":"","what":"Data standardization function — data_standardization","title":"Data standardization function — data_standardization","text":"function standardizes input data","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_standardization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data standardization function — data_standardization","text":"","code":"data_standardization(raw_data)"},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_standardization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data standardization function — data_standardization","text":"raw_data input data","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_standardization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data standardization function — data_standardization","text":"resulting dataset standardized data","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/data_standardization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data standardization function — data_standardization","text":"","code":"dat = data_generate_MCAR(nsubj = 100, seed = 1234, n_miss = 5); head(dat$Y1[,1:5]) #>           [,1]       [,2]       [,3]       [,4]       [,5] #> [1,] -1.455015  4.4325139 -0.1385899 -1.2657233 -0.3303383 #> [2,] -1.931601  3.6904397 -0.4001167 -0.6398729 -1.2939863 #> [3,]  0.110446 -0.8910078  2.9783519  0.4348456 -0.3905672 #> [4,] -2.875821  7.9262359 -0.4975126 -0.5333830  1.2906608 #> [5,] -1.421581  2.6181680 -1.0322329 -0.4958435 -1.1244439 #> [6,] -1.112864 -0.9087328  0.9203492 -0.5078019 -0.6922695 Y1_std = data_standardization(dat$Y1); head(Y1_std[,1:5]) #>            [,1]       [,2]       [,3]       [,4]       [,5] #> [1,] -0.8931014  2.2520840 -0.1898521 -0.7919797 -0.2922863 #> [2,] -0.9755383  1.7309787 -0.2382638 -0.3536852 -0.6685832 #> [3,]  0.1016464 -0.4653495  1.7253765  0.2853126 -0.1820137 #> [4,] -1.0023704  2.6487308 -0.1985009 -0.2106252  0.4059027 #> [5,] -0.8105817  1.4103736 -0.5965278 -0.3016340 -0.6472232 #> [6,] -0.4687322 -0.3745449  0.4694016 -0.1895536 -0.2746678"},{"path":"https://ruiyangli1.github.io/FILICA/reference/flica_nomiss.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to run LICA on no-missing data — flica_nomiss","title":"Function to run LICA on no-missing data — flica_nomiss","text":"function calls matlab function run LICA -missing data","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/flica_nomiss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to run LICA on no-missing data — flica_nomiss","text":"","code":"flica_nomiss(ncomp, flica_niter)"},{"path":"https://ruiyangli1.github.io/FILICA/reference/flica_nomiss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to run LICA on no-missing data — flica_nomiss","text":"ncomp number components used LICA flica_niter number iterations used LICA","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/flica_nomiss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to run LICA on no-missing data — flica_nomiss","text":"resulting dataset results estimated LICA","code":""},{"path":"https://ruiyangli1.github.io/FILICA/reference/flica_nomiss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to run LICA on no-missing data — flica_nomiss","text":"","code":"# Save data at \"./MATLAB_code/flica/data_nomiss.mat\" #writeMat(\"./MATLAB_code/flica/data_nomiss.mat\", #         mod1_true = mod1_true, mod2_true = mod2_true  # simulated data w/ no missing (before standardization, code in matlab will do the standardization) #         ) # Run LICA on no-miss data #re_nomiss = flica_nomiss(ncomp = 5, flica_niter = 1500)"}]
